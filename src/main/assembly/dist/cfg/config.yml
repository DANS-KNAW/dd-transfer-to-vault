collect:
  inboxes: []
  # polling interval in milliseconds
  pollingInterval: 500
  taskQueue:
    nameFormat: "collect-worker-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

metadata:
  inbox: /var/opt/dans.knaw.nl/tmp/metadata-inbox
  # polling interval in milliseconds
  pollingInterval: 500
  taskQueue:
    nameFormat: "metadata-worker-thread-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

dataArchive:
  baseDir: 'danstst0@archive.surfsara.nl:'

createOcflTar:
  inbox: /var/opt/dans.knaw.nl/tmp/ocfl-tar/inbox
  workDir: /var/opt/dans.knaw.nl/tmp/ocfl-tar/workdirs
  inboxThreshold: 2G
  tarCommand: 'dmftar -c -f %s %s' # target, source
  # polling interval in milliseconds
  pollingInterval: 500
  taskQueue:
    nameFormat: "ocfl-tar-worker-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

confirmArchived:
  cron: '0 0 * * * ?' # cron expression for triggering a polling round
  taskQueue:
    nameFormat: "confirm-archived-worker-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

database:
  driverClass: org.postgresql.Driver
  url: jdbc:postgresql://localhost:5432/dd_transfer_to_vault
  user: changeme
  password: changeme
  logValidationErrors: true
  properties:
    hibernate.dialect: 'org.hibernate.dialect.PostgreSQL95Dialect'
    hibernate.hbm2ddl.auto: update

logging:
  level: INFO
  loggers:
    "nl.knaw.dans": INFO
  appenders:
    - type: file
      archive: false
      currentLogFilename: '/var/opt/dans.knaw.nl/log/dd-transfer-to-vault/dd-transfer-to-vault.log'
