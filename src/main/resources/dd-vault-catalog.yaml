openapi: 3.0.1
info:
  title: Vault Catalog Service API
  version: 2.0.0
  description: |
    This document specifies the Vault Catalog Service API. It provides relational metadata about items in the vault catalog.
    This API implements the operations ...

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: 'http://localhost:20305'
    description: Local machine running the Vault Catalog Service

paths:
  /:
    get:
      summary: Returns a description of the service.
      description:
        This is the starting place for navigating the Vault Catalog Service. It returns a description of the service.
      operationId: getInfo
      responses:
        200:
          description: Description of the service
          content:
            text/plain:
              schema:
                type: string
                description: A plain text, human readable description of the service
                example: DANS VAULT CATALOG SERVICE running v1.2.3


  /ocflObject/bagId/{bagId}:
    get:
      tags:
        - ocflObjectVersion
      operationId: getOcflObjectsByBagId
      parameters:
        - name: bagId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OCFL Object Version array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OcflObjectVersion'

  /ocflObject/swordToken/{swordToken}:
    get:
      tags:
        - ocflObjectVersion
      operationId: getOcflObjectsBySwordToken
      parameters:
        - name: swordToken
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OCFL Object Version array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OcflObjectVersion'

  /ocflObject/bagId/{bagId}/version/{versionNumber}:
    get:
      tags:
        - ocflObjectVersion
      operationId: getOcflObjectByBagIdAndVersionNumber
      parameters:
        - name: bagId
          in: path
          required: true
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Single OCFL Object Version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OcflObjectVersion"

    put:
      tags:
        - ocflObjectVersion
      operationId: createOcflObjectVersion
      summary: PUT a new OCFL Object to the Catalog, or extend an existing one
      description: |
      requestBody:
        description: When extending an existing OCFL Object in the Catalog, it is not possible to update properties
          that were set previously. All pre-existing properties must match the newly sent properties.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OcflObjectVersionParameters"
      parameters:
        - name: bagId
          in: path
          required: true
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          schema:
            type: integer

      responses:
        201:
          description: The object has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcflObjectVersion'
        400:
          description: The OcflObject was syntactically incorrect, for instance not all required fields were provided.
        401:
          description: Unauthorized
        500:
          $ref: '#/components/responses/Unavailable'

  /tar:
    post:
      tags:
        - tar
      description: Adds a new archive
      operationId: addArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TarParameter'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tar'

  /tar/{id}:
    get:
      tags:
        - tar
      description: Get archive details
      operationId: getArchiveById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: "uuid"
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tar'
    put:
      tags:
        - tar
      description: Updates an existing archive
      operationId: updateArchive
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: "uuid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TarParameter'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tar'

components:
  responses:
    Unavailable:
      description: Service is unavailable because of an error.
    FileNotFound:
      description: The item could not be found.

  schemas:
    Tar:
      type: object
      required:
        - tarUuid
        - vaultPath
        - tarParts
        - ocflObjectVersions
      example:
        vaultPath: theVault
        tarUuid: e102df56-14ca-48a6-a74a-0fc1ae1c14de
        archivalDate: 2023-05-02T18:56:51.582Z
        tarParts: [ "part01", "part02" ]
        ocflObjectVersions: [ ]
      properties:
        vaultPath:
          type: string
        tarUuid:
          type: string
          format: "uuid"
        archivalDate:
          type: string
          format: date-time
        tarParts:
          type: array
          items:
            $ref: '#/components/schemas/TarPart'
        ocflObjectVersions:
          type: array
          items:
            $ref: '#/components/schemas/OcflObjectVersion'

    TarParameter:
      type: object
      required:
        - tarUuid
        - vaultPath
        - tarParts
        - ocflObjectVersions
      example:
        vaultPath: theVault
        tarUuid: e102df56-14ca-48a6-a74a-0fc1ae1c14de
        archivalDate: 2023-05-02T18:56:51.582Z
        tarParts: [ "part01", "part02" ]
        ocflObjectVersions: [ ]
      properties:
        vaultPath:
          type: string
        tarUuid:
          type: string
          format: "uuid"
        archivalDate:
          type: string
          format: date-time
        tarParts:
          type: array
          items:
            $ref: '#/components/schemas/TarPartParameter'
        ocflObjectVersions:
          type: array
          items:
            $ref: '#/components/schemas/OcflObjectVersionRef'

    TarPart:
      type: object
      example:
        partName: part01
        tarUuid: e102df56-14ca-48a6-a74a-0fc1ae1c14de
        checksumAlgorithm: BLAKE-256
        checksumValue: 716f6e863f744b9ac22c97ec7b76ea5f5908bc5b2f67c61510bfc4751384ea7a
      required:
        - partName
        - tarUuid
        - checksumAlgorithm
        - checkumValue
      properties:
        partName:
          type: string
        tarUuid:
          type: string
          format: "uuid"
        checksumAlgorithm:
          type: string
        checksumValue:
          type: string

    TarPartParameter:
      type: object
      example:
        partName: part01
        checksumAlgorithm: BLAKE-256
        checksumValue: 716f6e863f744b9ac22c97ec7b76ea5f5908bc5b2f67c61510bfc4751384ea7a
      required:
        - partName
        - checksumAlgorithm
        - checkumValue
      properties:
        partName:
          type: string
        checksumAlgorithm:
          type: string
        checksumValue:
          type: string

    OcflObjectVersion:
      type: object
      example:
        bagId: urn:uuid:40594b6d-8378-4260-b96b-13b57beadf7c
        objectVersion: 1
        nbn: urn:nbn:nl:ui:13-00-1haq
        swordToken: sword:016526b1-c0ae-4237-854c-1f4d0b84d25a
        dataSupplier: REPO1
        tarUuid: e102df56-14ca-48a6-a74a-0fc1ae1c14de
        ocflObjectPath: 40/59/4b/6d-8378-4260-b96b-13b57beadf7c
        datastation: DS_Archaeology
        dataversePid: https://doi.org/10.17026/XXXXX
        dataversePidVersion: V1.0
        otherId: REPO1:31998
        otherIdVersion: 3.2
        exportTimestamp: 2023-04-09T11:56:58.607Z
      required:
        - bagId
        - objectVersion
        - skeletonRecord
      properties:
        bagId:
          type: string
        objectVersion:
          type: integer
        swordToken:
          type: string
        nbn:
          type: string
        dataSupplier:
          type: string
        tarUuid:
          type: string
          format: "uuid"
        dataversePid:
          type: string
        dataversePidVersion:
          type: string
        otherId:
          type: string
        otherIdVersion:
          type: string
        ocflObjectPath:
          type: string
        metadata:
          type: object
          format: "json-ld"
          additionalProperties: true
        filePidToLocalPath:
          type: string
        exportTimestamp:
          type: string
          format: date-time
        skeletonRecord:
          type: boolean
          default: false

    OcflObjectVersionParameters:
      type: object
      example:
        nbn: urn:nbn:nl:ui:13-00-1haq
        swordToken: sword:016526b1-c0ae-4237-854c-1f4d0b84d25a
        dataSupplier: REPO1
        tarUuid: e102df56-14ca-48a6-a74a-0fc1ae1c14de
        ocflObjectPath: 40/59/4b/6d-8378-4260-b96b-13b57beadf7c
        datastation: DS_Archaeology
        dataversePid: https://doi.org/10.17026/XXXXX
        dataversePidVersion: V1.0
        otherId: REPO1:31998
        otherIdVersion: 3.2
        exportTimestamp: 2023-04-09T11:56:58.607Z
      properties:
        swordToken:
          type: string
        nbn:
          type: string
        dataSupplier:
          type: string
        dataversePid:
          type: string
        dataversePidVersion:
          type: string
        otherId:
          type: string
        otherIdVersion:
          type: string
        ocflObjectPath:
          type: string
        metadata:
          type: object
          format: "json-ld"
          additionalProperties: true
        filePidToLocalPath:
          type: string
        exportTimestamp:
          type: string
          format: date-time
        skeletonRecord:
          type: boolean
          default: false

    OcflObjectVersionRef:
      type: object
      example:
        bagId: urn:uuid:40594b6d-8378-4260-b96b-13b57beadf7c
        objectVersion: 1
      required:
        - bagId
        - objectVersion
      properties:
        bagId:
          type: string
        objectVersion:
          type: integer