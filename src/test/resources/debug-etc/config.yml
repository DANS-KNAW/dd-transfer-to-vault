#
# dd-transfer-to-vault
#
collect:
  inboxes:
    - name: Test inbox 1
      path: data/tmp/transfer-inboxes/inbox1
    - name: Test_inbox 2
      path: data/tmp/transfer-inboxes/inbox2
  taskQueue:
    nameFormat: "add-worker-thread-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

createOcfl:
  inbox: data/tmp/ocfl-inbox
  workDir: data/tmp/ocfl-workdirs
  taskQueue:
    nameFormat: "ocf-thread-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

createTar:
  inbox: data/tmp/tar-inbox
  workDir: data/tmp/tar-workdirs
  dataArchiveRoot: 'danstst0@archive.surfsara.nl:'
  inboxThreshold: 2G
  tarCommand: 'dmftar -c -f %s %s' # target, source
  taskQueue:
    nameFormat: "tar-thread-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10

    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

confirmArchived:
  dataArchiveRoot: 'danstst0@archive.surfsara.nl:'
  cron: '' # cron expression for triggering a polling round
  taskQueue:
    nameFormat: "confirm-thread-%d"
    maxQueueSize: 5000
    # Number of threads will be increased when maxQueueSize is exceeded.
    minThreads: 1
    # No more than maxThreads will be created though
    maxThreads: 10
    # Threads will die after 60 seconds of idleness
    keepAliveTime: 60 seconds

database:
  driverClass: org.hsqldb.jdbcDriver
  url: jdbc:hsqldb:hsql://localhost:9001/dd-transfer-to-vault
  logValidationErrors: true
  # See: https://stackoverflow.com/questions/10684244/dbcp-validationquery-for-different-databases
  validationQuery: SELECT * FROM INFORMATION_SCHEMA.SYSTEM_TABLES
  properties:
    hibernate.dialect: 'org.hibernate.dialect.HSQLDialect'
    hibernate.hbm2ddl.auto: update

logging:
  level: INFO
  loggers:
    "nl.knaw.dans": TRACE
  appenders:
    - type: file
      archive: false
      currentLogFilename: 'data/dd-transfer-to-vault.log'
    - type: console
      logFormat: "%-5p [%d{ISO8601}] [%t] %c: %m%n%rEx"
